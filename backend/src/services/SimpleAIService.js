/**
 * ÁÆÄÂåñÁöÑAIÊúçÂä°
 * ‰∏ìÊ≥®‰∫éÂü∫Êú¨ÁöÑAIÈóÆÁ≠îÂäüËÉΩ
 */

import DeepSeekService from './DeepSeekService.js';

class SimpleAIService {
  constructor() {
    this.deepSeekService = new DeepSeekService();
    this.isEnabled = true;
  }

  /**
   * Â§ÑÁêÜÁî®Êà∑Êü•ËØ¢
   */
  async processQuery(userQuery) {
    console.log('ü§ñ SimpleAIÂ§ÑÁêÜÊü•ËØ¢:', userQuery);
    
    try {
      // Âà§Êñ≠ÊòØÂê¶ÈúÄË¶ÅAIÂ§ÑÁêÜ
      if (this.shouldUseAI(userQuery)) {
        console.log('üß† ‰ΩøÁî®AIÂ§ÑÁêÜ');
        const answer = await this.deepSeekService.answerQuestion(userQuery);
        return {
          reply: answer,
          source: 'ai-enhanced',
          type: 'ai_direct'
        };
      } else {
        console.log('üìã ‰∏çÈúÄË¶ÅAIÂ§ÑÁêÜ');
        return null; // ËÆ©ÊéßÂà∂Âô®‰ΩøÁî®Âü∫Á°ÄËßÑÂàôÂ§ÑÁêÜ
      }
    } catch (error) {
      console.error('‚ùå SimpleAIÂ§ÑÁêÜÂ§±Ë¥•:', error);
      return null; // ÈôçÁ∫ßÂà∞Âü∫Á°ÄËßÑÂàôÂ§ÑÁêÜ
    }
  }

  /**
   * Âà§Êñ≠ÊòØÂê¶ÈúÄË¶Å‰ΩøÁî®AI
   */
  shouldUseAI(userQuery) {
    // ÈóÆÂÄôËØ≠Âíå‰ªãÁªçÁ±ªÂÖ≥ÈîÆËØç
    const greetingKeywords = [
      '‰Ω†Â•Ω', 'ÊÇ®Â•Ω', '‰ªãÁªç', 'ÂäüËÉΩ', 'ËÉΩÂäõ', 'Â∏ÆÂä©', '‰ªÄ‰πà', 'ÊòØ‰ªÄ‰πà',
      'hello', 'hi', 'Ê¨¢Ëøé', 'ÂºÄÂßã'
    ];

    // Â§çÊùÇÊü•ËØ¢ÁöÑÂÖ≥ÈîÆËØç
    const complexKeywords = [
      'ÂàÜÊûê', 'ËØÑ‰º∞', 'ÊØîËæÉ', 'Ë∂ãÂäø', 'È¢ÑÊµã', 'Âª∫ËÆÆ', '‰ºòÂåñ',
      'Êï¥‰Ωì', 'ÁªºÂêà', 'Ê∑±Â∫¶', 'ÂÖ®Èù¢', 'ËØ¶ÁªÜ', '‰∏ì‰∏ö',
      '‰∏∫‰ªÄ‰πà', 'Â¶Ç‰Ωï', 'ÊÄéÊ†∑', 'ÂéüÂõ†', 'ÂΩ±Âìç', 'ÂÖ≥ËÅî'
    ];

    const hasGreetingKeywords = greetingKeywords.some(keyword =>
      userQuery.includes(keyword)
    );

    const hasComplexKeywords = complexKeywords.some(keyword =>
      userQuery.includes(keyword)
    );

    // ÈïøÊü•ËØ¢ÈÄöÂ∏∏Êõ¥Â§çÊùÇ
    const isLongQuery = userQuery.length > 20;

    return hasGreetingKeywords || hasComplexKeywords || isLongQuery;
  }

  /**
   * ÂÅ•Â∫∑Ê£ÄÊü•
   */
  async healthCheck() {
    try {
      const health = await this.deepSeekService.healthCheck();
      return {
        status: 'healthy',
        deepSeek: health,
        enabled: this.isEnabled
      };
    } catch (error) {
      return {
        status: 'error',
        error: error.message,
        enabled: this.isEnabled
      };
    }
  }
}

export default SimpleAIService;
