class g{constructor(){this.config={apiKey:"sk-cab797574abf4288bcfaca253191565d",baseURL:"https://api.deepseek.com/v1/chat/completions",model:"deepseek-chat",timeout:3e4,maxRetries:3},this.isAvailable=!1,this.lastHealthCheck=null,this.healthCheckInterval=5*60*1e3}async initialize(){return console.log("🤖 初始化AI服务管理器..."),await this.healthCheck(),this.isAvailable}async healthCheck(){try{console.log("🔍 执行AI服务健康检查...");const e=await fetch(this.config.baseURL,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.config.apiKey}`},body:JSON.stringify({model:this.config.model,messages:[{role:"user",content:"测试连接"}],max_tokens:10}),signal:AbortSignal.timeout(5e3)});e.ok?(this.isAvailable=!0,this.lastHealthCheck=Date.now(),console.log("✅ AI服务健康检查通过")):(this.isAvailable=!1,console.warn("⚠️ AI服务健康检查失败:",e.status))}catch(e){this.isAvailable=!1,console.warn("⚠️ AI服务健康检查异常:",e.message)}return this.isAvailable}async analyzeUserIntent(e){console.log("🧠 分析用户意图:",e);const t=this.basicIntentAnalysis(e);if(!this.isAvailable)return console.log("⚠️ AI服务不可用，使用基础分析"),t;try{const s=await this.aiIntentAnalysis(e);return{...t,...s,confidence:Math.max(t.confidence,s.confidence||.5),source:"ai_enhanced"}}catch(s){return console.warn("⚠️ AI意图分析失败，使用基础分析:",s.message),t}}basicIntentAnalysis(e){const t=e.toLowerCase(),s=["查询","查看","显示","统计","分析","报告","库存","物料","供应商","工厂","测试","检验","批次","不良率","合格率","风险","异常"],n=["什么是","如何","为什么","怎么","建议","推荐","最佳实践","标准","规范","流程","方法"],o=s.filter(l=>t.includes(l)).length,i=n.filter(l=>t.includes(l)).length;let r="general",a=!1,c=.3;return o>i?(r="data_query",a=!0,c=Math.min(.8,.3+o*.1)):i>0&&(r="consultation",a=!1,c=Math.min(.7,.3+i*.1)),{intent:r,needsDataQuery:a,confidence:c,keywords:{dataQuery:o,consultation:i},source:"rule_based"}}async aiIntentAnalysis(e){const t=`
作为QMS问答助手-小Q，请分析以下用户问题的意图：

用户问题："${e}"

请判断：
1. 用户意图类型（data_query: 数据查询, consultation: 咨询问答, general: 一般对话）
2. 是否需要查询数据库数据（true/false）
3. 置信度（0-1之间的数值）
4. 关键信息提取

请以JSON格式回复：
{
  "intent": "data_query|consultation|general",
  "needsDataQuery": true|false,
  "confidence": 0.8,
  "extractedInfo": {
    "entities": ["实体1", "实体2"],
    "queryType": "库存查询|质量分析|供应商评估|等",
    "scope": "具体范围"
  },
  "reasoning": "分析理由"
}
`;try{const s=await this.callDeepSeek(t),n=JSON.parse(s);return console.log("🤖 AI意图分析结果:",n),n}catch(s){return console.warn("⚠️ AI意图分析解析失败:",s.message),{confidence:.3}}}async callDeepSeek(e,t={}){if(!this.isAvailable)throw new Error("AI服务不可用");const s={model:this.config.model,messages:[{role:"user",content:e}],temperature:t.temperature||.7,max_tokens:t.maxTokens||2e3,stream:!1};let n=null;for(let o=1;o<=this.config.maxRetries;o++)try{console.log(`🔄 AI调用尝试 ${o}/${this.config.maxRetries}`);const i=await fetch(this.config.baseURL,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.config.apiKey}`},body:JSON.stringify(s),signal:AbortSignal.timeout(this.config.timeout)});if(!i.ok){const a=await i.text();throw new Error(`API错误 ${i.status}: ${a}`)}const r=await i.json();return console.log("✅ AI调用成功"),r.choices[0].message.content}catch(i){if(n=i,console.warn(`⚠️ AI调用尝试 ${o} 失败:`,i.message),o<this.config.maxRetries){const r=Math.pow(2,o)*1e3;await new Promise(a=>setTimeout(a,r))}}throw this.isAvailable=!1,n||new Error("AI服务调用失败")}generateFallbackResponse(e,t){const s={data_query:`抱歉，小Q的AI增强功能暂时不可用。我已收到您关于"${e}"的查询请求，正在尝试通过基础规则为您处理...`,consultation:`我是小Q，您的质量管理助手。关于您的问题"${e}"，虽然AI增强功能暂时不可用，但我可以基于专业知识为您提供基础建议...`,general:`您好！我是小Q。我收到了您的问题"${e}"，虽然智能分析功能暂时不可用，但我会尽力为您提供帮助...`};return s[t]||s.general}shouldPerformHealthCheck(){return this.lastHealthCheck?Date.now()-this.lastHealthCheck>this.healthCheckInterval:!0}}const f=new g;class u{constructor(){this.isSupported=!1,this.isListening=!1,this.isSpeaking=!1,this.recognition=null,this.recognitionConfig={continuous:!1,interimResults:!0,lang:"zh-CN",maxAlternatives:1},this.synthesis=null,this.synthesisConfig={lang:"zh-CN",rate:1,pitch:1,volume:1},this.onResult=null,this.onError=null,this.onStart=null,this.onEnd=null,this.onSpeechStart=null,this.onSpeechEnd=null,this.init()}init(){console.log("🎤 初始化语音服务..."),this.checkSupport(),this.isSupported?(this.initRecognition(),this.initSynthesis(),console.log("✅ 语音服务初始化成功")):console.warn("⚠️ 当前浏览器不支持语音功能")}checkSupport(){const e=window.SpeechRecognition||window.webkitSpeechRecognition,t=window.speechSynthesis;return this.isSupported=!!(e&&t),e||console.warn("⚠️ 浏览器不支持语音识别"),t||console.warn("⚠️ 浏览器不支持语音合成"),this.isSupported}initRecognition(){const e=window.SpeechRecognition||window.webkitSpeechRecognition;e&&(this.recognition=new e,Object.assign(this.recognition,this.recognitionConfig),this.recognition.onstart=()=>{console.log("🎤 语音识别开始"),this.isListening=!0,this.onStart&&this.onStart()},this.recognition.onresult=t=>{console.log("🎤 语音识别结果事件:",t),console.log("🎤 结果数量:",t.results.length);let s="",n="",o=0;for(let r=t.resultIndex;r<t.results.length;r++){const a=t.results[r],c=a[0].transcript,l=a[0].confidence||0;console.log(`🎤 结果 ${r}: "${c}" (final: ${a.isFinal}, confidence: ${l})`),a.isFinal?(s+=c,o=Math.max(o,l)):n+=c}const i={final:s.trim(),interim:n.trim(),confidence:o};console.log("🎤 处理后的识别结果:",i),this.onResult&&this.onResult(i)},this.recognition.onerror=t=>{console.error("❌ 语音识别错误:",t.error),this.isListening=!1,this.onError&&this.onError(t.error)},this.recognition.onend=()=>{console.log("🎤 语音识别结束"),this.isListening=!1,this.onEnd&&this.onEnd()})}initSynthesis(){this.synthesis=window.speechSynthesis,this.synthesis&&(this.getVoices(),this.synthesis.onvoiceschanged=()=>{this.getVoices()})}getVoices(){if(!this.synthesis)return[];const e=this.synthesis.getVoices();console.log("🔊 可用语音:",e.length);const t=e.filter(s=>s.lang.includes("zh")||s.lang.includes("CN"));return t.length>0&&(this.preferredVoice=t[0],console.log("🔊 选择中文语音:",this.preferredVoice.name)),e}startListening(){if(!this.isSupported||!this.recognition)return console.warn("⚠️ 语音识别不可用"),this.onError&&this.onError("语音识别不可用"),!1;if(this.isListening)return console.warn("⚠️ 语音识别已在进行中"),!1;try{return console.log("🎤 开始语音识别..."),console.log("🎤 识别配置:",this.recognitionConfig),Object.assign(this.recognition,this.recognitionConfig),this.recognition.start(),console.log("🎤 语音识别启动命令已发送"),!0}catch(e){console.error("❌ 启动语音识别失败:",e),console.error("❌ 错误详情:",e.name,e.message);let t=e.message;return e.name==="NotAllowedError"?t="麦克风权限被拒绝，请允许网站访问麦克风":e.name==="NotFoundError"?t="未找到麦克风设备":e.name==="NotSupportedError"&&(t="浏览器不支持语音识别"),this.onError&&this.onError(t),!1}}stopListening(){if(!this.recognition||!this.isListening)return!1;try{return console.log("🎤 停止语音识别..."),this.recognition.stop(),!0}catch(e){return console.error("❌ 停止语音识别失败:",e),!1}}speak(e,t={}){if(!this.isSupported||!this.synthesis)return console.warn("⚠️ 语音合成不可用"),!1;this.isSpeaking&&(console.log("🔊 停止当前语音播放"),this.synthesis.cancel());const s=new SpeechSynthesisUtterance(e);s.lang=t.lang||this.synthesisConfig.lang,s.rate=t.rate||this.synthesisConfig.rate,s.pitch=t.pitch||this.synthesisConfig.pitch,s.volume=t.volume||this.synthesisConfig.volume,this.preferredVoice&&(s.voice=this.preferredVoice),s.onstart=()=>{console.log("🔊 语音播放开始"),this.isSpeaking=!0,this.onSpeechStart&&this.onSpeechStart()},s.onend=()=>{console.log("🔊 语音播放结束"),this.isSpeaking=!1,this.onSpeechEnd&&this.onSpeechEnd()},s.onerror=n=>{console.error("❌ 语音播放错误:",n.error),this.isSpeaking=!1,this.onError&&this.onError(n.error)};try{return console.log("🔊 开始语音播放:",e.substring(0,50)+"..."),this.synthesis.speak(s),!0}catch(n){return console.error("❌ 语音播放失败:",n),this.onError&&this.onError(n.message),!1}}stopSpeaking(){if(!this.synthesis)return!1;try{return console.log("🔊 停止语音播放"),this.synthesis.cancel(),this.isSpeaking=!1,!0}catch(e){return console.error("❌ 停止语音播放失败:",e),!1}}setCallbacks(e){this.onResult=e.onResult,this.onError=e.onError,this.onStart=e.onStart,this.onEnd=e.onEnd,this.onSpeechStart=e.onSpeechStart,this.onSpeechEnd=e.onSpeechEnd}getStatus(){return{isSupported:this.isSupported,isListening:this.isListening,isSpeaking:this.isSpeaking,hasVoices:!!this.preferredVoice}}}const p=new u;export{f as a,p as v};
